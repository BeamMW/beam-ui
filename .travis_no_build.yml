git:
  depth: false
  submodule: false

matrix:
  include:

###############################################################################
# OSX Debug
###############################################################################
    # DISABLED, since we don't check it
    #- os: osx
    #  language: cpp
    #  cache: ccache
    #  osx_image: xcode10.1
    #  install: 
    #    - export TZ=Etc/GMT-3
    #    - brew update
    #    - brew unlink cmake
    #    - brew install cmake
    #    - brew link cmake
    #    - brew install ccache
    #    - export PATH="/usr/local/opt/ccache/libexec:$PATH"
    #    - brew uninstall --ignore-dependencies qt boost
    #    - curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/56c500b569c724b049be7ab9e12d9693f85522f9/Formula/qt.rb
    #    - brew install ./qt.rb
    #    - brew link qt5 --force
    #    - curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb
    #    - brew install ./boost.rb
    #    - export PATH=/usr/local/opt/qt/bin:$PATH
    #    - export OPENSSL_ROOT_DIR="/usr/local/opt/openssl@1.1"
    #  env: 
    #    - BUILD_TYPE=Debug
    #    - OS_FOLDER=mac
    #  script:
    #    - cd beam
    #    - git apply 3rdparty/protobuf-patch.diff
    #    - cd ..
    #    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBRANCH_NAME=$TRAVIS_BRANCH -DBEAM_HW_WALLET=Off .
    #    - make -j$(sysctl -n hw.ncpu)
    #    - ctest --verbose
    #  after_success:
    #    - cpack
    #    # extract build version
    #    - BEAM_VERSION="$(cat beam_version.gen)" && rm beam_version.gen
    #    - echo BEAM_VERSION = $BEAM_VERSION
    #    - export BEAM_WALLET_UI_IN="BeamWallet$BEAM_DISPLAY_SUFFIX-$BEAM_VERSION-Darwin.dmg"
    #    - export BEAM_WALLET_UI_OUT="Beam-Wallet$BEAM_DISPLAY_SUFFIX2-$BEAM_VERSION.dmg"
    #    - export BEAM_WALLET_UI_OUT_VERLESS="Beam-Wallet$BEAM_DISPLAY_SUFFIX2.dmg"
    #

###############################################################################
# OSX Release
###############################################################################

    - os: osx
      language: cpp
      cache: ccache
      osx_image: xcode12.2
      addons:
        homebrew:
          packages:
          - qt5
          update: true
      install:
        - export TZ=GMT-3
        - sudo systemsetup -gettimezone
        #- travis_retry wget --no-check-certificate https://builds.beam.mw/QT5/qt5.12.9-static.tar.gz
        #- sudo mkdir /usr/local/qt5-static
        #- sudo tar -xf qt5.12.9-static.tar.gz -C /usr/local/qt5-static
        - brew update
        - brew unlink cmake
        - brew install cmake
        - brew link cmake
        - brew install ccache
        - export PATH="/usr/local/opt/ccache/libexec:$PATH"
        #- brew upgrade --ignore-pinned icu4c
        #- brew uninstall --ignore-dependencies --force sfcgal
        #- brew uninstall --ignore-dependencies --force cgal
        #- brew uninstall --ignore-dependencies node
        #- brew uninstall --ignore-dependencies --force postgresql
        #- brew uninstall --ignore-dependencies postgis
        
        #- sudo git clone --depth=1 https://github.com/nesbox/qt5-static-mac.git /usr/local/qt5-static
        #- brew uninstall --ignore-dependencies --force boost
        #- curl -O https://raw.githubusercontent.com/Homebrew/homebrew-core/5da5895add2f6b9320d654dd844d4827f6876c8b/Formula/boost.rb
        #- brew install ./boost.rb
        - export OPENSSL_ROOT_DIR="/usr/local/opt/openssl@1.1"
        - export QT5_ROOT_DIR=$(brew --prefix qt)
        - export PATH="${QT5_ROOT_DIR}/bin:$PATH"
        - export QML_IMPORT_PATH="${QT5_ROOT_DIR}/qml"
        - openssl aes-256-cbc -K $encrypted_82bff69d916a_key -iv $encrypted_82bff69d916a_iv -in macos_cert.tar.enc -out macos_cert.tar -d
        - tar xvf macos_cert.tar
        # create custom keychain
        - security create-keychain -p travis macos-build.keychain
        - security default-keychain -s macos-build.keychain
        - security unlock-keychain -p travis macos-build.keychain
        - security set-keychain-settings -t 3600 -l ~/Library/Keychains/macos-build.keychain
        # import certificates
        - security import distkey.p12 -P $MACOS_DISTRIBUTION_KEY_PASSWORD  -k ~/Library/Keychains/macos-build.keychain -T /usr/bin/codesign
        - security import devapp.cer -k ~/Library/Keychains/macos-build.keychain -T /usr/bin/codesign
        - security set-key-partition-list -S "apple-tool:,apple:" -s -k travis macos-build.keychain
      env: 
        - BUILD_TYPE=Release
        - OS_FOLDER=mac
      script:
        - cd beam
        - git apply 3rdparty/protobuf-patch.diff
        - cd ..
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDEBUG_MESSAGES_IN_RELEASE_MODE=On -DBEAM_LINK_TYPE=Static -DBRANCH_NAME=$TRAVIS_BRANCH -DBEAM_SIGN_MACOS_BINARY=On -DBEAM_SIGN_IDENTITY2="$MACOS_SIGN_IDENTITY2" -DBEAM_SIGN_IDENTITY="$MACOS_SIGN_IDENTITY" -DBEAM_HW_WALLET=Off .
        - make -j$(sysctl -n hw.ncpu)
        #- ctest --verbose
      after_success:
        - cpack
        # extract build version
        - BEAM_VERSION="$(cat beam_version.gen)" && rm beam_version.gen
        - echo BEAM_VERSION = $BEAM_VERSION
        - export BEAM_WALLET_UI_IN="BeamWallet$BEAM_DISPLAY_SUFFIX-$BEAM_VERSION-Darwin.dmg"
        - export BEAM_WALLET_UI_OUT="Beam-Wallet$BEAM_DISPLAY_SUFFIX2-$BEAM_VERSION.dmg"
        - export BEAM_WALLET_UI_OUT_VERLESS="Beam-Wallet$BEAM_DISPLAY_SUFFIX2.dmg"
        # sign our builds
        - codesign -verify -s "$MACOS_SIGN_IDENTITY2" -o runtime --timestamp $BEAM_WALLET_UI_IN
        - bash notarize.sh

###############################################################################
# Linux Debug
###############################################################################
    # DISABLED, since we don't check it
    #- os: linux
    #  dist: trusty
    #  language: cpp
    #  cache: ccache
    #  addons:
    #    apt:
    #      update: true
    #      sources:
    #        - ubuntu-toolchain-r-test
    #      packages:
    #        - g++-7
    #        - libssl-dev
    #        - curl
    #  install:
    #    - export TZ=Etc/GMT-3
    #    # install new version cmake
    #    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    #    - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
    #    - travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.tar.gz
    #    - tar -xvf cmake-3.14.0-Linux-x86_64.tar.gz > /dev/null
    #    - mv cmake-3.14.0-Linux-x86_64 cmake-install
    #    - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
    #    - cd ${TRAVIS_BUILD_DIR}
    #    - cmake --version
    #    - sudo git clone --depth=1 https://github.com/BeamMW/boost-linux.git /usr/local/boost_1_69_0
    #    - export BOOST_ROOT="/usr/local/boost_1_69_0"
    #    - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y
    #    - sudo apt-get update
    #    - sudo apt-get install qt510declarative qt510svg qttools5-dev libgl1-mesa-dev-lts-trusty
    #    - eval "CC=gcc-7 && CXX=g++-7"
    #    - export PATH=/opt/qt510/bin:$PATH
    #  env: 
    #    - BUILD_TYPE=Debug
    #    - OS_FOLDER=linux
    #  script:
    #    - cd beam
    #    - git apply 3rdparty/protobuf-patch.diff
    #    - cd ..
    #    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DBRANCH_NAME=$TRAVIS_BRANCH -DBEAM_HW_WALLET=Off .
    #    - make -j$(nproc)
    #    - ctest --verbose
    #  after_success:
    #    - cpack
    #    # extract build version
    #    - BEAM_VERSION="$(cat beam_version.gen)" && rm beam_version.gen
    #    - echo BEAM_VERSION = $BEAM_VERSION
    #    - export BEAM_WALLET_UI_IN="BeamWallet$BEAM_DISPLAY_SUFFIX-$BEAM_VERSION-Linux.deb"
    #    - export BEAM_WALLET_UI_OUT="Beam-Wallet$BEAM_DISPLAY_SUFFIX2-$BEAM_VERSION.deb"
    #    - export BEAM_WALLET_UI_OUT_VERLESS="Beam-Wallet$BEAM_DISPLAY_SUFFIX2.deb"

###############################################################################
# Linux Release
###############################################################################

    - os: linux
      dist: focal
      language: cpp
      cache: ccache
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - qtbase5-dev
            - qtdeclarative5-dev
            - libqt5svg5-dev
            - qtwebengine5-dev
            - qttools5-dev
            - qtquickcontrols2-5-dev
            - g++-7
            - libssl-dev
            - curl
            - libxi-dev
            - libcups2-dev
            - libboost-all-dev
      install:
        - export TZ=Etc/GMT-3
        # install new version cmake
        - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
        - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
        #- travis_retry wget --no-check-certificate https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0-Linux-x86_64.tar.gz
        #- tar -xvf cmake-3.14.0-Linux-x86_64.tar.gz > /dev/null
        #- mv cmake-3.14.0-Linux-x86_64 cmake-install
        #- PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
        - cd ${TRAVIS_BUILD_DIR}
        - cmake --version
        #- sudo git clone --depth=1 https://github.com/BeamMW/boost-linux.git /usr/local/boost_1_69_0
        #- wget https://dl.bintray.com/boostorg/release/1.71.0/source/boost_1_71_0.tar.gz
        #- tar xzf boost_1_71_0.tar.gz  > /dev/null
        #- cd boost_1_71_0
        #- ./bootstrap.sh --prefix=/usr/local/boost_1_71_0
        #- ./b2
        #- sudo ./b2 install
        #- export BOOST_ROOT="/usr/local/boost_1_71_0"

        - eval "CC=gcc-7 && CXX=g++-7"
        - export QT_SELECT=qt5
        #- git clone --depth=1 https://github.com/nesbox/qt5-static-linux.git /home/travis/qt5-static
        - export QT5_ROOT_DIR="/usr/lib/x86_64-linux-gnu/qt5"
        - export PATH="${QT5_ROOT_DIR}/bin:$PATH"
        - export QML_IMPORT_PATH="${QT5_ROOT_DIR}/qml"
        - qmake --version
      env: 
        - BUILD_TYPE=Release
        - OS_FOLDER=linux
      script:
        - cd beam
        - git apply 3rdparty/protobuf-patch.diff
        - cd ..
        - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DDEBUG_MESSAGES_IN_RELEASE_MODE=On -DBEAM_LINK_TYPE=Static -DBRANCH_NAME=$TRAVIS_BRANCH -DBEAM_HW_WALLET=Off .
        - make -j$(nproc)
        #- ctest --verbose
      after_success:
        - cpack
        # extract build version
        - BEAM_VERSION="$(cat beam_version.gen)" && rm beam_version.gen
        - echo BEAM_VERSION = $BEAM_VERSION
        - export BEAM_WALLET_UI_IN="BeamWallet$BEAM_DISPLAY_SUFFIX-$BEAM_VERSION-Linux.deb"
        - export BEAM_WALLET_UI_OUT="Beam-Wallet$BEAM_DISPLAY_SUFFIX2-$BEAM_VERSION.deb"
        - export BEAM_WALLET_UI_OUT_VERLESS="Beam-Wallet$BEAM_DISPLAY_SUFFIX2.deb"

###############################################################################
# Common part
###############################################################################
before_install:
  - git submodule update --init --recursive --remote --jobs 4
before_script:
  - curl -sL https://raw.githubusercontent.com/travis-ci/artifacts/master/install | bash
  - BEAM_TARGET_SUFFIX=""
  - BEAM_DISPLAY_SUFFIX=""
  - BEAM_DISPLAY_SUFFIX2=""

after_script:
  # deploy using ftp server
  - BUILDS_SERVER_PATH=${BUILD_SERVER}/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER
    
  # upload binaries to FTP
  - curl --retry 3 --ftp-create-dirs -T "$HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_IN" "$BUILDS_SERVER_PATH/$BEAM_WALLET_UI_OUT"

  # upload binaries to FTP, to the latest folder
  - BUILDS_SERVER_LATEST_PATH=${BUILD_SERVER}/$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER
  - curl --retry 3 --ftp-create-dirs -T "$HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_IN" "$BUILDS_SERVER_LATEST_PATH/$BEAM_WALLET_UI_OUT_VERLESS"

  # prep for deploy to AWS S3
  - cp $HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_IN $HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_OUT

  # upload binaries to S3
  - artifacts upload --target-paths "$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$BUILD_TYPE/$OS_FOLDER/" $HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_OUT

  # prep for deploy to AWS S3, latest folder
  - cp $HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_IN $HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_OUT_VERLESS

  # upload binaries to S3, to the latest folder
  - artifacts upload --target-paths "$TRAVIS_BRANCH/latest/$BUILD_TYPE/$OS_FOLDER/" $HOME/build/BeamMW/beam-ui/$BEAM_WALLET_UI_OUT_VERLESS

notifications:
  email:
    - big.romanov@gmail.com
